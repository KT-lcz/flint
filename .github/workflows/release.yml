name: Release Binaries

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on:
      - self-hosted
      - ${{ matrix.os == 'darwin' && 'macOS' || 'Linux' }}
      - ${{ matrix.os == 'darwin' && 'ARM64' || 'X64' }}
    permissions:
      contents: write
    strategy:
      matrix:
        os: [linux, darwin]
        arch: [amd64, arm64]
        exclude:
          - os: darwin
            arch: amd64

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-go@v5
      with:
        go-version: '1.25.0'

    - name: Check environment
      run: |
        echo "OS: $(uname -s)"
        echo "Arch: $(uname -m)"
        go version

    - name: Install Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Build Web UI
      run: |
        cd web
        bun install
        bun run build
        cd ..

    # ----------------- Build Step -----------------
    - name: Build Native or Docker ARM64
      env:
        PKG_CONFIG_PATH: ${{ matrix.os == 'darwin' && '/opt/homebrew/lib/pkgconfig' || matrix.os == 'linux' && matrix.arch == 'amd64' && '/usr/lib/x86_64-linux-gnu/pkgconfig' || matrix.os == 'linux' && matrix.arch == 'arm64' && '/usr/lib/aarch64-linux-gnu/pkgconfig' || '' }}:$PKG_CONFIG_PATH
      run: |
        if [[ "${{ matrix.os }}" == "linux" && "${{ matrix.arch }}" == "arm64" ]]; then
          echo "Building Linux ARM64 via Docker QEMU..."
          docker run --rm -t \
            -v $PWD:/src -w /src \
            --platform=linux/arm64 \
            golang:1.25 bash -c "\
              export CGO_ENABLED=1; \
              export PKG_CONFIG_PATH=/usr/lib/aarch64-linux-gnu/pkgconfig; \
              export CGO_CFLAGS='-I/usr/include/libvirt'; \
              export CGO_LDFLAGS='-L/usr/lib -lvirt'; \
              make install \
            "
        else
          echo "Building ${{ matrix.os }} ${{ matrix.arch }} natively..."
          make install
        fi

    # ----------------- Package & Release -----------------
    - name: Package
      run: |
        zip -j flint-${{ matrix.os }}-${{ matrix.arch }}.zip flint*

    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          flint-${{ matrix.os }}-${{ matrix.arch }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
