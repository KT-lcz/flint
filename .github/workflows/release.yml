name: Release Binaries

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      matrix:
        os: [linux, darwin]
        arch: [amd64, arm64]
        exclude:
          - os: darwin
            arch: amd64

    runs-on: ${{ matrix.os == 'linux' && matrix.arch == 'amd64' && 'hypr' || matrix.os == 'darwin' && matrix.arch == 'arm64' && 'MacBook-Pro' }}

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.0'

      - name: Check environment
        run: |
          echo "OS: $(uname -s)"
          echo "Arch: $(uname -m)"
          go version

      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Build Web UI
        run: |
          cd web
          bun install
          bun run build
          cd ..

      - name: Build Binary
        run: |
          if [[ "${{ matrix.os }}" == "linux" && "${{ matrix.arch }}" == "arm64" ]]; then
            echo "Building linux/arm64 via Docker QEMU"
            docker run --rm -v "$PWD":/src -w /src --platform linux/arm64 golang:1.25-bullseye \
            bash -c "go mod download && make install"
          else
            echo "Native build for ${{ matrix.os }}/ ${{ matrix.arch }}"
            make install
          fi
        env:
          PKG_CONFIG_PATH: ${{ matrix.os == 'darwin' && '/opt/homebrew/lib/pkgconfig' || matrix.os == 'linux' && matrix.arch == 'amd64' && '/usr/lib/x86_64-linux-gnu/pkgconfig' || '' }}:$PKG_CONFIG_PATH
          CGO_ENABLED: 1
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          CGO_CFLAGS: ${{ matrix.os == 'linux' && matrix.arch == 'arm64' && '-I/usr/local/include/libvirt' || '' }}
          CGO_LDFLAGS: ${{ matrix.os == 'linux' && matrix.arch == 'arm64' && '-L/usr/local/lib -lvirt' || '' }}

      - name: Package
        run: |
          zip -j flint-${{ matrix.os }}-${{ matrix.arch }}.zip flint*

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            flint-${{ matrix.os }}-${{ matrix.arch }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
