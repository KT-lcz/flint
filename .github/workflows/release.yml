name: Release Binaries

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: self-hosted
            runner: hypr
            goos: linux
            goarch: amd64
          - os: self-hosted
            runner: MacBook-Pro
            goos: linux
            goarch: arm64
          - os: self-hosted
            runner: MacBook-Pro
            goos: darwin
            goarch: arm64

    runs-on: ${{ matrix.runner }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # Install Bun + Go inside Docker if cross-building for linux/arm64 on MacBook
      - name: Build binary
        run: |
          set -euo pipefail
          echo "üî® Building ${{ matrix.goos }}/${{ matrix.goarch }} on runner: ${{ matrix.runner }}"

          if [[ "${{ matrix.goos }}" == "linux" && "${{ matrix.goarch }}" == "arm64" ]]; then
            echo "üê≥ Using Docker for cross-compilation on macOS..."
            docker run --rm \
              -v "$PWD":/src \
              -w /src \
              --platform linux/arm64 \
              debian:bullseye \
              bash -lc '
                set -euo pipefail
                apt-get update -qq
                apt-get install -y curl wget tar zip build-essential ca-certificates pkg-config git

                # Install Go 1.25 arm64
                wget -q https://go.dev/dl/go1.25.0.linux-arm64.tar.gz
                tar -C /usr/local -xzf go1.25.0.linux-arm64.tar.gz
                export PATH=/usr/local/go/bin:$PATH

                # Install Bun properly
                curl -fsSL https://bun.sh/install | bash
                export PATH="$HOME/.bun/bin:$PATH"
                bun --version

                # Install Go + web deps
                go version
                make deps

                # Build binary
                make build GOOS=linux GOARCH=arm64
              '
          else
            echo "‚ö° Native build for ${{ matrix.goos }}/${{ matrix.goarch }}"
            make deps
            make build GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }}
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: flint-${{ matrix.goos }}-${{ matrix.goarch }}
          path: ./bin/flint-${{ matrix.goos }}-${{ matrix.goarch }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            flint-linux-amd64
            flint-linux-arm64
            flint-darwin-arm64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
